# ===============================================
# LoadRunner Enterprise Test Configuration
# ===============================================

# Number of Load Generators to allocate. If this value is not specified, the system will allocate the hosts as per the group definitions.
lgAmount: 1

# Specific Controller to run the test. If not specified, the system assigns one automatically.
controller: "devserver"

# Type of workload (e.g., 1 = basicByTest, 2 = realWorldByTest). Refer the documentation for details. if not specified, defaults to 1 which means basicByTest.
workloadTypeCode: 1

# IDs of the monitor profiles to attach (for system metrics). If you don't have any monitoring, you can comment out this line or omit it.
#monitorProfileIds: [ 1001, 1002 ]

# Automatic trending configuration for test results
automaticTrending:
  reportId: 5  # ID of the report used for trending analysis. LRE will create this id if not available.


# ===============================================
# GROUP DEFINITIONS
# Each group defines a set of virtual users running a specific script
# ===============================================
groups:
  - name: "SampleGroup1"           # Logical name of the Vuser group
    script: "e2e/Optional"        # Path or identifier of the test script to run

    # Scheduler for this group — defines how users start/stop during the test. This scheduler section used if the workloadTypeCode supports group-level scheduling.
    scheduler:
      - startVusers: "52vu:gradually:2U@15s"    # ramp-up 2 users every 10 seconds
      - duration: "50m"
      - startVusers: "50vu:simultaneously"    # ramp-up 2 users every 10 seconds
      - duration: "5"


    # Load generator assignment — which LGs will run this group. In this example, LG1 (automatch 1 on-prem LG) and a cloud LG
    hostnames: "LG1, cloud1"

    # Template for selecting cloud LGs.
    hostTemplate: "cloud1 : lowSpecLG"

    # Pacing defines the delay between iterations of the script
    pacing: "fixed delay:5/3"  # e.g., after previous iteration ends, new iteration will be started after fixed delay of 5 seconds. iterations count set to 3

    # Think time defines simulated user wait between actions
    thinkTime: "modify:*2.0"   # Multiply recorded think time by 2.0x

    # Logging options for Vusers
    log: "extended:on error:15:trace"  # Detailed logging on error with trace enabled and cache size 15KB



    # Reference to a global runtime setting
#    globalRTS: "RTS1"

    # Reference to a predefined global command line
#    globalCommandLine: "cmd1"


  - name: "SampleGroup2"
#    vusers: 10
    script: "10"                # Reference to another script or ID
    hostnames: "LG1, MyLocalLG"
    scheduler:
      - startGroup: "after SampleGroup1"    # ramp-up 2 users every 10 seconds

#    globalRTS: "RTS1"           # Reuse global RTS profile


  - name: "SampleGroup3"
#    vusers: 15
    script: "11"
    hostnames: "LG2"
    pacing: "random interval: 10 - 15 / 5"   # Random pacing between 10–15 seconds, deviation 5s
    thinkTime: "random: 50 - 150 : 30"       # Random think time between 50–150ms, average 30ms
    log: ignore                              # Disable logging
    selenium: >
      JREPath=C:\\java\\jdk,
      ClassPath=myclasspath.jar,
      TestNgFiles=testng.xml


## ===============================================
## ️ Global Configurations shared across groups
## ===============================================
#
## Global command lines available to groups
#globalCommandLines:
#  - name: "cmd1"
#    value: "command line 1"
#
## Global runtime settings profiles (RTS)
#globalRts:
#  - name: "RTS1"
#    pacing: "immediately"        # Start next iteration immediately after previous ends
#    thinkTime: "modify:*2.0"     # Double the recorded think time globally
#

# ===============================================
# Global Scheduler (for test-level scheduling)
# This scheduler section is used if the workloadTypeCode supports only test-level scheduling.
# ===============================================
scheduler:
#  - initialize: "gradually:10u@30s"
   - startVusers: "10vu:gradually:2U@10s"
#   - startVusers: "gradually:2U@15s"
#   - duration: "until complete"

   - duration: "1 h 5 M"
   - startVusers: "1vu:simultaneously"
   - duration: "5m"
#  - startVusers: "15vu:gradually:2U@10s"
   - stopVusers: "simultaneously"


# ===============================================
# SLA (Service Level Agreement) Definitions
# Used to evaluate test success and performance metrics
# ===============================================

sla:
  # --- Average Response Time Criteria ---
  avgResponseTimeLoadCriteria: "Hits per Second"
  avgResponseTimeLoadRanges: [ 5, 10, 15 , 20 ]
  avgResponseTimeThresholds:
    landing_page: [ 5, 10, 15, 20 , 25 ]
    login: [ 5, 10, 15, 20 , 25 ]
    logout: [ 2, 5, 12 , 25, 30 ]

  # --- Errors Per Second Criteria ---
  errorLoadCriteriaType: "Hits per Second"
  errorLoadRanges: [ 5, 10, 15, 20 ]
  errorThreshold: [ 2, 3, 4, 5, 6 ]

# Simple SLA criteria example
  totalHits: 20
  avgHitsPerSecond: 50
  totalThroughput: 80000
  avgThroughput: 5000
